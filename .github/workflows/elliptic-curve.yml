name: elliptic-curve

on:
  pull_request:
    paths:
      - ".github/workflows/elliptic-curve.yml"
      - "elliptic-curve/**"
      - "Cargo.*"
  push:
    branches: master

defaults:
  run:
    working-directory: elliptic-curve

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.61.0 # MSRV
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v3
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features alloc
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features arithmetic
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features bits
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features dev
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features digest
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features ecdh
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features hazmat
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features hash2curve
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features jwk
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features pem
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features pkcs8
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features sec1
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features serde
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features voprf
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features alloc,arithmetic,pkcs8
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features alloc,serde
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features arithmetic,serde
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features alloc,digest,ecdh,hazmat,hash2curve,jwk,pem,pkcs8,sec1,serde,voprf

  # TODO: use the reusable workflow after this crate is re-added to the
  # toplevel workspace
  # minimal-versions:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: RustCrypto/actions/cargo-cache@master
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true
  #         profile: minimal
  #     - uses: RustCrypto/actions/cargo-hack-install@master
  #     - run: cargo update -Z minimal-versions
  #     - run: cargo hack test --release --feature-powerset

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.61.0 # MSRV
          - stable
          - nightly
    steps:
      - uses: actions/checkout@v3
      - uses: RustCrypto/actions/cargo-cache@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal
      - run: cargo check --all-features
      - run: cargo test --no-default-features
      - run: cargo test
      - run: cargo test --all-features
